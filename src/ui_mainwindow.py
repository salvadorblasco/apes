# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'forms/mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(688, 464)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("forms/monkey.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.splitter_main = QtWidgets.QSplitter(self.centralwidget)
        self.splitter_main.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_main.setObjectName("splitter_main")
        self.layoutWidget = QtWidgets.QWidget(self.splitter_main)
        self.layoutWidget.setObjectName("layoutWidget")
        self.vl_1 = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.vl_1.setContentsMargins(0, 0, 0, 0)
        self.vl_1.setObjectName("vl_1")
        self.tab_main = QtWidgets.QTabWidget(self.layoutWidget)
        self.tab_main.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tab_main.setMovable(True)
        self.tab_main.setObjectName("tab_main")
        self.vl_1.addWidget(self.tab_main)
        self.hl_1 = QtWidgets.QHBoxLayout()
        self.hl_1.setObjectName("hl_1")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.hl_1.addItem(spacerItem)
        self.pb_undo = QtWidgets.QPushButton(self.layoutWidget)
        self.pb_undo.setEnabled(True)
        self.pb_undo.setObjectName("pb_undo")
        self.hl_1.addWidget(self.pb_undo)
        self.pb_refresh = QtWidgets.QPushButton(self.layoutWidget)
        self.pb_refresh.setEnabled(True)
        self.pb_refresh.setObjectName("pb_refresh")
        self.hl_1.addWidget(self.pb_refresh)
        self.pb_iteration = QtWidgets.QPushButton(self.layoutWidget)
        self.pb_iteration.setEnabled(True)
        self.pb_iteration.setObjectName("pb_iteration")
        self.hl_1.addWidget(self.pb_iteration)
        self.pb_go = QtWidgets.QPushButton(self.layoutWidget)
        self.pb_go.setEnabled(True)
        self.pb_go.setCheckable(False)
        self.pb_go.setObjectName("pb_go")
        self.hl_1.addWidget(self.pb_go)
        self.vl_1.addLayout(self.hl_1)
        self.widget_plot = QtWidgets.QWidget(self.splitter_main)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.widget_plot.sizePolicy().hasHeightForWidth())
        self.widget_plot.setSizePolicy(sizePolicy)
        self.widget_plot.setMinimumSize(QtCore.QSize(10, 0))
        self.widget_plot.setSizeIncrement(QtCore.QSize(1, 1))
        self.widget_plot.setObjectName("widget_plot")
        self.horizontalLayout.addWidget(self.splitter_main)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 688, 22))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuImport = QtWidgets.QMenu(self.menuFile)
        self.menuImport.setObjectName("menuImport")
        self.menuPlot = QtWidgets.QMenu(self.menubar)
        self.menuPlot.setEnabled(True)
        self.menuPlot.setObjectName("menuPlot")
        self.menuApplyStyle = QtWidgets.QMenu(self.menuPlot)
        self.menuApplyStyle.setObjectName("menuApplyStyle")
        self.menuApplyColor = QtWidgets.QMenu(self.menuPlot)
        self.menuApplyColor.setObjectName("menuApplyColor")
        self.menuFont_Size = QtWidgets.QMenu(self.menuPlot)
        self.menuFont_Size.setObjectName("menuFont_Size")
        self.menuExternal_data = QtWidgets.QMenu(self.menuPlot)
        self.menuExternal_data.setEnabled(True)
        self.menuExternal_data.setObjectName("menuExternal_data")
        self.menuFigure = QtWidgets.QMenu(self.menuPlot)
        self.menuFigure.setObjectName("menuFigure")
        self.menuFit = QtWidgets.QMenu(self.menubar)
        self.menuFit.setEnabled(True)
        self.menuFit.setObjectName("menuFit")
        self.menuFit_method = QtWidgets.QMenu(self.menuFit)
        self.menuFit_method.setEnabled(True)
        self.menuFit_method.setObjectName("menuFit_method")
        self.menuCovergence_criteria = QtWidgets.QMenu(self.menuFit)
        self.menuCovergence_criteria.setObjectName("menuCovergence_criteria")
        self.menuWeighting = QtWidgets.QMenu(self.menuFit)
        self.menuWeighting.setObjectName("menuWeighting")
        self.menuDataset = QtWidgets.QMenu(self.menubar)
        self.menuDataset.setObjectName("menuDataset")
        self.menuImportDS = QtWidgets.QMenu(self.menuDataset)
        self.menuImportDS.setObjectName("menuImportDS")
        self.menuNewDataset = QtWidgets.QMenu(self.menuDataset)
        self.menuNewDataset.setObjectName("menuNewDataset")
        self.menu_Help = QtWidgets.QMenu(self.menubar)
        self.menu_Help.setObjectName("menu_Help")
        self.menu_Model = QtWidgets.QMenu(self.menubar)
        self.menu_Model.setObjectName("menu_Model")
        self.menuSet_active = QtWidgets.QMenu(self.menu_Model)
        self.menuSet_active.setObjectName("menuSet_active")
        self.menuOutput = QtWidgets.QMenu(self.menubar)
        self.menuOutput.setEnabled(True)
        self.menuOutput.setObjectName("menuOutput")
        self.menuTools = QtWidgets.QMenu(self.menubar)
        self.menuTools.setObjectName("menuTools")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionSave_as = QtWidgets.QAction(MainWindow)
        self.actionSave_as.setObjectName("actionSave_as")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionPlot_unplot = QtWidgets.QAction(MainWindow)
        self.actionPlot_unplot.setEnabled(True)
        self.actionPlot_unplot.setObjectName("actionPlot_unplot")
        self.actionAddittional_data = QtWidgets.QAction(MainWindow)
        self.actionAddittional_data.setEnabled(True)
        self.actionAddittional_data.setObjectName("actionAddittional_data")
        self.actionImportSuperquad = QtWidgets.QAction(MainWindow)
        self.actionImportSuperquad.setObjectName("actionImportSuperquad")
        self.actionPASAT = QtWidgets.QAction(MainWindow)
        self.actionPASAT.setEnabled(False)
        self.actionPASAT.setObjectName("actionPASAT")
        self.actionImportHyperquad = QtWidgets.QAction(MainWindow)
        self.actionImportHyperquad.setEnabled(True)
        self.actionImportHyperquad.setObjectName("actionImportHyperquad")
        self.actionNelder_Mead = QtWidgets.QAction(MainWindow)
        self.actionNelder_Mead.setCheckable(True)
        self.actionNelder_Mead.setEnabled(True)
        self.actionNelder_Mead.setMenuRole(QtWidgets.QAction.PreferencesRole)
        self.actionNelder_Mead.setObjectName("actionNelder_Mead")
        self.actionLevenberg_Marquardt = QtWidgets.QAction(MainWindow)
        self.actionLevenberg_Marquardt.setCheckable(True)
        self.actionLevenberg_Marquardt.setChecked(True)
        self.actionLevenberg_Marquardt.setMenuRole(QtWidgets.QAction.PreferencesRole)
        self.actionLevenberg_Marquardt.setObjectName("actionLevenberg_Marquardt")
        self.actionNew_2 = QtWidgets.QAction(MainWindow)
        self.actionNew_2.setObjectName("actionNew_2")
        self.actionImportPASAT = QtWidgets.QAction(MainWindow)
        self.actionImportPASAT.setObjectName("actionImportPASAT")
        self.actionImportSuperquadDS = QtWidgets.QAction(MainWindow)
        self.actionImportSuperquadDS.setObjectName("actionImportSuperquadDS")
        self.actionImportHyperquadDS = QtWidgets.QAction(MainWindow)
        self.actionImportHyperquadDS.setObjectName("actionImportHyperquadDS")
        self.actionDeleteDS = QtWidgets.QAction(MainWindow)
        self.actionDeleteDS.setEnabled(True)
        self.actionDeleteDS.setObjectName("actionDeleteDS")
        self.actionNewProject = QtWidgets.QAction(MainWindow)
        self.actionNewProject.setObjectName("actionNewProject")
        self.actionNewDataset = QtWidgets.QAction(MainWindow)
        self.actionNewDataset.setObjectName("actionNewDataset")
        self.actionNewTitrSim = QtWidgets.QAction(MainWindow)
        self.actionNewTitrSim.setObjectName("actionNewTitrSim")
        self.actionNewSpeciesDist = QtWidgets.QAction(MainWindow)
        self.actionNewSpeciesDist.setObjectName("actionNewSpeciesDist")
        self.actionOptions = QtWidgets.QAction(MainWindow)
        self.actionOptions.setObjectName("actionOptions")
        self.actionUndo = QtWidgets.QAction(MainWindow)
        self.actionUndo.setObjectName("actionUndo")
        self.actionRefresh = QtWidgets.QAction(MainWindow)
        self.actionRefresh.setObjectName("actionRefresh")
        self.actionIteration = QtWidgets.QAction(MainWindow)
        self.actionIteration.setObjectName("actionIteration")
        self.actionFit = QtWidgets.QAction(MainWindow)
        self.actionFit.setObjectName("actionFit")
        self.actionUse = QtWidgets.QAction(MainWindow)
        self.actionUse.setCheckable(True)
        self.actionUse.setChecked(True)
        self.actionUse.setEnabled(True)
        self.actionUse.setObjectName("actionUse")
        self.actionNewEmfDS = QtWidgets.QAction(MainWindow)
        self.actionNewEmfDS.setObjectName("actionNewEmfDS")
        self.actionNewSpecDS = QtWidgets.QAction(MainWindow)
        self.actionNewSpecDS.setEnabled(True)
        self.actionNewSpecDS.setObjectName("actionNewSpecDS")
        self.actionNewNMRDS = QtWidgets.QAction(MainWindow)
        self.actionNewNMRDS.setEnabled(True)
        self.actionNewNMRDS.setObjectName("actionNewNMRDS")
        self.actionExportImage = QtWidgets.QAction(MainWindow)
        self.actionExportImage.setObjectName("actionExportImage")
        self.actionImportHypNMR = QtWidgets.QAction(MainWindow)
        self.actionImportHypNMR.setEnabled(True)
        self.actionImportHypNMR.setObjectName("actionImportHypNMR")
        self.actionNewModel = QtWidgets.QAction(MainWindow)
        self.actionNewModel.setObjectName("actionNewModel")
        self.actionRename = QtWidgets.QAction(MainWindow)
        self.actionRename.setObjectName("actionRename")
        self.actionAdd_beta = QtWidgets.QAction(MainWindow)
        self.actionAdd_beta.setObjectName("actionAdd_beta")
        self.actionRemove_beta = QtWidgets.QAction(MainWindow)
        self.actionRemove_beta.setObjectName("actionRemove_beta")
        self.actionCopyTitDat = QtWidgets.QAction(MainWindow)
        self.actionCopyTitDat.setEnabled(True)
        self.actionCopyTitDat.setObjectName("actionCopyTitDat")
        self.actionSaveOutput = QtWidgets.QAction(MainWindow)
        self.actionSaveOutput.setObjectName("actionSaveOutput")
        self.actionOutputClear = QtWidgets.QAction(MainWindow)
        self.actionOutputClear.setObjectName("actionOutputClear")
        self.actionCoarse = QtWidgets.QAction(MainWindow)
        self.actionCoarse.setCheckable(True)
        self.actionCoarse.setObjectName("actionCoarse")
        self.actionFine = QtWidgets.QAction(MainWindow)
        self.actionFine.setCheckable(True)
        self.actionFine.setChecked(True)
        self.actionFine.setObjectName("actionFine")
        self.actionAdd_reagent = QtWidgets.QAction(MainWindow)
        self.actionAdd_reagent.setObjectName("actionAdd_reagent")
        self.actionRemove_reagent = QtWidgets.QAction(MainWindow)
        self.actionRemove_reagent.setObjectName("actionRemove_reagent")
        self.actionExport = QtWidgets.QAction(MainWindow)
        self.actionExport.setEnabled(False)
        self.actionExport.setObjectName("actionExport")
        self.actionHelp = QtWidgets.QAction(MainWindow)
        self.actionHelp.setObjectName("actionHelp")
        self.actionAbout_APES = QtWidgets.QAction(MainWindow)
        self.actionAbout_APES.setObjectName("actionAbout_APES")
        self.actionProperties = QtWidgets.QAction(MainWindow)
        self.actionProperties.setObjectName("actionProperties")
        self.actionWAuto = QtWidgets.QAction(MainWindow)
        self.actionWAuto.setCheckable(True)
        self.actionWAuto.setChecked(True)
        self.actionWAuto.setObjectName("actionWAuto")
        self.actionWUnit = QtWidgets.QAction(MainWindow)
        self.actionWUnit.setCheckable(True)
        self.actionWUnit.setObjectName("actionWUnit")
        self.actionStyle1 = QtWidgets.QAction(MainWindow)
        self.actionStyle1.setCheckable(True)
        self.actionStyle1.setChecked(True)
        self.actionStyle1.setObjectName("actionStyle1")
        self.actionStyle2 = QtWidgets.QAction(MainWindow)
        self.actionStyle2.setCheckable(True)
        self.actionStyle2.setObjectName("actionStyle2")
        self.actionStyle3 = QtWidgets.QAction(MainWindow)
        self.actionStyle3.setCheckable(True)
        self.actionStyle3.setObjectName("actionStyle3")
        self.actionStyle4 = QtWidgets.QAction(MainWindow)
        self.actionStyle4.setCheckable(True)
        self.actionStyle4.setObjectName("actionStyle4")
        self.actionColorBW = QtWidgets.QAction(MainWindow)
        self.actionColorBW.setCheckable(True)
        self.actionColorBW.setChecked(True)
        self.actionColorBW.setObjectName("actionColorBW")
        self.actionColorRed = QtWidgets.QAction(MainWindow)
        self.actionColorRed.setCheckable(True)
        self.actionColorRed.setObjectName("actionColorRed")
        self.actionColorBlue = QtWidgets.QAction(MainWindow)
        self.actionColorBlue.setCheckable(True)
        self.actionColorBlue.setObjectName("actionColorBlue")
        self.actionColorRainbow = QtWidgets.QAction(MainWindow)
        self.actionColorRainbow.setCheckable(True)
        self.actionColorRainbow.setObjectName("actionColorRainbow")
        self.actionFont6 = QtWidgets.QAction(MainWindow)
        self.actionFont6.setCheckable(True)
        self.actionFont6.setObjectName("actionFont6")
        self.actionFont7 = QtWidgets.QAction(MainWindow)
        self.actionFont7.setCheckable(True)
        self.actionFont7.setObjectName("actionFont7")
        self.actionFont8 = QtWidgets.QAction(MainWindow)
        self.actionFont8.setCheckable(True)
        self.actionFont8.setChecked(False)
        self.actionFont8.setObjectName("actionFont8")
        self.actionFont9 = QtWidgets.QAction(MainWindow)
        self.actionFont9.setCheckable(True)
        self.actionFont9.setChecked(False)
        self.actionFont9.setObjectName("actionFont9")
        self.actionFont10 = QtWidgets.QAction(MainWindow)
        self.actionFont10.setCheckable(True)
        self.actionFont10.setChecked(True)
        self.actionFont10.setObjectName("actionFont10")
        self.actionFont11 = QtWidgets.QAction(MainWindow)
        self.actionFont11.setCheckable(True)
        self.actionFont11.setChecked(False)
        self.actionFont11.setObjectName("actionFont11")
        self.actionFont12 = QtWidgets.QAction(MainWindow)
        self.actionFont12.setCheckable(True)
        self.actionFont12.setObjectName("actionFont12")
        self.actionLabels = QtWidgets.QAction(MainWindow)
        self.actionLabels.setCheckable(True)
        self.actionLabels.setChecked(True)
        self.actionLabels.setObjectName("actionLabels")
        self.actionLegend = QtWidgets.QAction(MainWindow)
        self.actionLegend.setCheckable(True)
        self.actionLegend.setObjectName("actionLegend")
        self.actionReset_counter = QtWidgets.QAction(MainWindow)
        self.actionReset_counter.setEnabled(False)
        self.actionReset_counter.setObjectName("actionReset_counter")
        self.actionClear_external_data = QtWidgets.QAction(MainWindow)
        self.actionClear_external_data.setObjectName("actionClear_external_data")
        self.actionNewCalorimetryDS = QtWidgets.QAction(MainWindow)
        self.actionNewCalorimetryDS.setEnabled(True)
        self.actionNewCalorimetryDS.setObjectName("actionNewCalorimetryDS")
        self.actionClose = QtWidgets.QAction(MainWindow)
        self.actionClose.setObjectName("actionClose")
        self.actionImportTxtSpec = QtWidgets.QAction(MainWindow)
        self.actionImportTxtSpec.setObjectName("actionImportTxtSpec")
        self.actionImportK88 = QtWidgets.QAction(MainWindow)
        self.actionImportK88.setObjectName("actionImportK88")
        self.actionScale = QtWidgets.QAction(MainWindow)
        self.actionScale.setEnabled(False)
        self.actionScale.setObjectName("actionScale")
        self.actionModelDelete = QtWidgets.QAction(MainWindow)
        self.actionModelDelete.setObjectName("actionModelDelete")
        self.actionDelete = QtWidgets.QAction(MainWindow)
        self.actionDelete.setObjectName("actionDelete")
        self.actionViewJacobian = QtWidgets.QAction(MainWindow)
        self.actionViewJacobian.setEnabled(False)
        self.actionViewJacobian.setObjectName("actionViewJacobian")
        self.actionConcentrationSolver = QtWidgets.QAction(MainWindow)
        self.actionConcentrationSolver.setObjectName("actionConcentrationSolver")
        self.actionModel_1 = QtWidgets.QAction(MainWindow)
        self.actionModel_1.setCheckable(False)
        self.actionModel_1.setChecked(False)
        self.actionModel_1.setObjectName("actionModel_1")
        self.actionImportModel = QtWidgets.QAction(MainWindow)
        self.actionImportModel.setObjectName("actionImportModel")
        self.actionNew = QtWidgets.QAction(MainWindow)
        self.actionNew.setObjectName("actionNew")
        self.action_ar_calorimetry = QtWidgets.QAction(MainWindow)
        self.action_ar_calorimetry.setEnabled(False)
        self.action_ar_calorimetry.setObjectName("action_ar_calorimetry")
        self.actionRemove_calorimetry = QtWidgets.QAction(MainWindow)
        self.actionRemove_calorimetry.setObjectName("actionRemove_calorimetry")
        self.actionNewExternalData = QtWidgets.QAction(MainWindow)
        self.actionNewExternalData.setObjectName("actionNewExternalData")
        self.action_set_temperature = QtWidgets.QAction(MainWindow)
        self.action_set_temperature.setObjectName("action_set_temperature")
        self.actionSaveConc = QtWidgets.QAction(MainWindow)
        self.actionSaveConc.setObjectName("actionSaveConc")
        self.actionColorGroup = QtWidgets.QAction(MainWindow)
        self.actionColorGroup.setCheckable(True)
        self.actionColorGroup.setObjectName("actionColorGroup")
        self.actionAllowDP = QtWidgets.QAction(MainWindow)
        self.actionAllowDP.setCheckable(True)
        self.actionAllowDP.setChecked(True)
        self.actionAllowDP.setObjectName("actionAllowDP")
        self.action_combine_constants = QtWidgets.QAction(MainWindow)
        self.action_combine_constants.setObjectName("action_combine_constants")
        self.actionAspectRatio = QtWidgets.QAction(MainWindow)
        self.actionAspectRatio.setObjectName("actionAspectRatio")
        self.actionFigureSize = QtWidgets.QAction(MainWindow)
        self.actionFigureSize.setObjectName("actionFigureSize")
        self.actionLabelFormat = QtWidgets.QAction(MainWindow)
        self.actionLabelFormat.setObjectName("actionLabelFormat")
        self.actionImportTiamo = QtWidgets.QAction(MainWindow)
        self.actionImportTiamo.setObjectName("actionImportTiamo")
        self.actionIonic_strength_calculator = QtWidgets.QAction(MainWindow)
        self.actionIonic_strength_calculator.setObjectName("actionIonic_strength_calculator")
        self.actionCompare_models = QtWidgets.QAction(MainWindow)
        self.actionCompare_models.setObjectName("actionCompare_models")
        self.action_manual_fitting = QtWidgets.QAction(MainWindow)
        self.action_manual_fitting.setObjectName("action_manual_fitting")
        self.actionImportExternal = QtWidgets.QAction(MainWindow)
        self.actionImportExternal.setObjectName("actionImportExternal")
        self.actionCopyConc = QtWidgets.QAction(MainWindow)
        self.actionCopyConc.setObjectName("actionCopyConc")
        self.actionAdd_solid = QtWidgets.QAction(MainWindow)
        self.actionAdd_solid.setObjectName("actionAdd_solid")
        self.actionResetModel = QtWidgets.QAction(MainWindow)
        self.actionResetModel.setObjectName("actionResetModel")
        self.actionNewTitration = QtWidgets.QAction(MainWindow)
        self.actionNewTitration.setObjectName("actionNewTitration")
        self.menuImport.addAction(self.actionImportSuperquad)
        self.menuImport.addAction(self.actionImportHyperquad)
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSave_as)
        self.menuFile.addAction(self.actionClose)
        self.menuFile.addAction(self.menuImport.menuAction())
        self.menuFile.addAction(self.actionExport)
        self.menuFile.addAction(self.actionProperties)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionOptions)
        self.menuFile.addAction(self.actionExit)
        self.menuApplyStyle.addAction(self.actionStyle1)
        self.menuApplyStyle.addAction(self.actionStyle2)
        self.menuApplyStyle.addAction(self.actionStyle3)
        self.menuApplyStyle.addAction(self.actionStyle4)
        self.menuApplyColor.addAction(self.actionColorBW)
        self.menuApplyColor.addAction(self.actionColorRed)
        self.menuApplyColor.addAction(self.actionColorBlue)
        self.menuApplyColor.addAction(self.actionColorRainbow)
        self.menuApplyColor.addAction(self.actionColorGroup)
        self.menuFont_Size.addAction(self.actionFont6)
        self.menuFont_Size.addAction(self.actionFont8)
        self.menuFont_Size.addAction(self.actionFont10)
        self.menuFont_Size.addAction(self.actionFont12)
        self.menuExternal_data.addAction(self.actionAddittional_data)
        self.menuExternal_data.addAction(self.actionClear_external_data)
        self.menuFigure.addAction(self.actionAspectRatio)
        self.menuFigure.addAction(self.actionFigureSize)
        self.menuPlot.addAction(self.menuExternal_data.menuAction())
        self.menuPlot.addAction(self.actionExportImage)
        self.menuPlot.addAction(self.menuApplyStyle.menuAction())
        self.menuPlot.addAction(self.menuApplyColor.menuAction())
        self.menuPlot.addAction(self.menuFont_Size.menuAction())
        self.menuPlot.addAction(self.actionLabels)
        self.menuPlot.addAction(self.actionDelete)
        self.menuPlot.addAction(self.menuFigure.menuAction())
        self.menuFit_method.addAction(self.actionNelder_Mead)
        self.menuFit_method.addAction(self.actionLevenberg_Marquardt)
        self.menuCovergence_criteria.addAction(self.actionCoarse)
        self.menuCovergence_criteria.addAction(self.actionFine)
        self.menuWeighting.addAction(self.actionWAuto)
        self.menuWeighting.addAction(self.actionWUnit)
        self.menuFit.addAction(self.menuFit_method.menuAction())
        self.menuFit.addAction(self.menuCovergence_criteria.menuAction())
        self.menuFit.addAction(self.menuWeighting.menuAction())
        self.menuFit.addAction(self.actionAllowDP)
        self.menuFit.addSeparator()
        self.menuFit.addAction(self.actionUndo)
        self.menuFit.addAction(self.actionRefresh)
        self.menuFit.addAction(self.actionIteration)
        self.menuFit.addAction(self.actionFit)
        self.menuFit.addAction(self.actionReset_counter)
        self.menuFit.addSeparator()
        self.menuFit.addAction(self.actionViewJacobian)
        self.menuFit.addAction(self.actionConcentrationSolver)
        self.menuFit.addAction(self.actionSaveConc)
        self.menuFit.addAction(self.actionCopyConc)
        self.menuImportDS.addAction(self.actionImportPASAT)
        self.menuImportDS.addAction(self.actionImportSuperquadDS)
        self.menuImportDS.addAction(self.actionImportHyperquadDS)
        self.menuImportDS.addAction(self.actionImportTiamo)
        self.menuImportDS.addSeparator()
        self.menuImportDS.addAction(self.actionImportHypNMR)
        self.menuImportDS.addSeparator()
        self.menuImportDS.addAction(self.actionImportTxtSpec)
        self.menuImportDS.addSeparator()
        self.menuImportDS.addAction(self.actionImportK88)
        self.menuImportDS.addSeparator()
        self.menuImportDS.addAction(self.actionImportExternal)
        self.menuNewDataset.addAction(self.actionNewEmfDS)
        self.menuNewDataset.addAction(self.actionNewSpecDS)
        self.menuNewDataset.addAction(self.actionNewNMRDS)
        self.menuNewDataset.addAction(self.actionNewCalorimetryDS)
        self.menuNewDataset.addSeparator()
        self.menuNewDataset.addAction(self.actionNewTitrSim)
        self.menuNewDataset.addAction(self.actionNewSpeciesDist)
        self.menuNewDataset.addSeparator()
        self.menuNewDataset.addAction(self.actionNewExternalData)
        self.menuNewDataset.addAction(self.actionNewTitration)
        self.menuDataset.addAction(self.menuNewDataset.menuAction())
        self.menuDataset.addAction(self.menuImportDS.menuAction())
        self.menuDataset.addAction(self.actionDeleteDS)
        self.menuDataset.addAction(self.actionUse)
        self.menuDataset.addAction(self.actionCopyTitDat)
        self.menu_Help.addAction(self.actionHelp)
        self.menu_Help.addAction(self.actionAbout_APES)
        self.menuSet_active.addAction(self.actionModel_1)
        self.menu_Model.addAction(self.actionNewModel)
        self.menu_Model.addAction(self.actionRename)
        self.menu_Model.addAction(self.menuSet_active.menuAction())
        self.menu_Model.addAction(self.actionModelDelete)
        self.menu_Model.addAction(self.actionImportModel)
        self.menu_Model.addAction(self.actionResetModel)
        self.menu_Model.addSeparator()
        self.menu_Model.addAction(self.actionAdd_beta)
        self.menu_Model.addAction(self.actionAdd_solid)
        self.menu_Model.addAction(self.actionRemove_beta)
        self.menu_Model.addAction(self.actionAdd_reagent)
        self.menu_Model.addAction(self.actionRemove_reagent)
        self.menu_Model.addAction(self.action_ar_calorimetry)
        self.menu_Model.addSeparator()
        self.menu_Model.addAction(self.action_set_temperature)
        self.menu_Model.addSeparator()
        self.menu_Model.addAction(self.action_combine_constants)
        self.menu_Model.addAction(self.actionCompare_models)
        self.menu_Model.addAction(self.action_manual_fitting)
        self.menuOutput.addAction(self.actionSaveOutput)
        self.menuOutput.addAction(self.actionOutputClear)
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.actionIonic_strength_calculator)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menu_Model.menuAction())
        self.menubar.addAction(self.menuDataset.menuAction())
        self.menubar.addAction(self.menuPlot.menuAction())
        self.menubar.addAction(self.menuFit.menuAction())
        self.menubar.addAction(self.menuOutput.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())
        self.menubar.addAction(self.menu_Help.menuAction())

        self.retranslateUi(MainWindow)
        self.tab_main.setCurrentIndex(-1)
        self.actionExit.triggered.connect(MainWindow.close) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "APES, the All-purpose Equilibrium Solver"))
        self.pb_undo.setText(_translate("MainWindow", "Undo"))
        self.pb_refresh.setText(_translate("MainWindow", "Refresh"))
        self.pb_iteration.setToolTip(_translate("MainWindow", "Do one iteration"))
        self.pb_iteration.setText(_translate("MainWindow", "Iteration"))
        self.pb_go.setToolTip(_translate("MainWindow", "Do the full iteration cycle"))
        self.pb_go.setText(_translate("MainWindow", "Go!"))
        self.menuFile.setTitle(_translate("MainWindow", "&File"))
        self.menuImport.setTitle(_translate("MainWindow", "Import"))
        self.menuPlot.setTitle(_translate("MainWindow", "&Plot"))
        self.menuApplyStyle.setTitle(_translate("MainWindow", "Apply Style"))
        self.menuApplyColor.setTitle(_translate("MainWindow", "Apply Color"))
        self.menuFont_Size.setTitle(_translate("MainWindow", "Font Size"))
        self.menuExternal_data.setTitle(_translate("MainWindow", "External data"))
        self.menuFigure.setTitle(_translate("MainWindow", "Figure"))
        self.menuFit.setTitle(_translate("MainWindow", "Fi&t"))
        self.menuFit_method.setTitle(_translate("MainWindow", "Fit method"))
        self.menuCovergence_criteria.setTitle(_translate("MainWindow", "Covergence criteria"))
        self.menuWeighting.setTitle(_translate("MainWindow", "Weighting"))
        self.menuDataset.setTitle(_translate("MainWindow", "&Dataset"))
        self.menuImportDS.setTitle(_translate("MainWindow", "Import"))
        self.menuNewDataset.setTitle(_translate("MainWindow", "New"))
        self.menu_Help.setTitle(_translate("MainWindow", "&Help"))
        self.menu_Model.setTitle(_translate("MainWindow", "&Model"))
        self.menuSet_active.setTitle(_translate("MainWindow", "Set active"))
        self.menuOutput.setTitle(_translate("MainWindow", "Output"))
        self.menuTools.setTitle(_translate("MainWindow", "Tools"))
        self.actionOpen.setText(_translate("MainWindow", "&Open"))
        self.actionOpen.setToolTip(_translate("MainWindow", "Open data file"))
        self.actionSave.setText(_translate("MainWindow", "&Save"))
        self.actionSave.setToolTip(_translate("MainWindow", "Save  data"))
        self.actionSave_as.setText(_translate("MainWindow", "Save as"))
        self.actionExit.setText(_translate("MainWindow", "&Exit"))
        self.actionPlot_unplot.setText(_translate("MainWindow", "Plot/unplot"))
        self.actionAddittional_data.setText(_translate("MainWindow", "Add external data"))
        self.actionImportSuperquad.setText(_translate("MainWindow", "Superquad"))
        self.actionPASAT.setText(_translate("MainWindow", "PASAT"))
        self.actionImportHyperquad.setText(_translate("MainWindow", "Hyperquad"))
        self.actionNelder_Mead.setText(_translate("MainWindow", "Nelder-Mead"))
        self.actionLevenberg_Marquardt.setText(_translate("MainWindow", "Levenberg-Marquardt"))
        self.actionNew_2.setText(_translate("MainWindow", "New (empty)"))
        self.actionImportPASAT.setText(_translate("MainWindow", "PASAT"))
        self.actionImportSuperquadDS.setText(_translate("MainWindow", "Superquad"))
        self.actionImportHyperquadDS.setText(_translate("MainWindow", "Hyperquad"))
        self.actionDeleteDS.setText(_translate("MainWindow", "Delete"))
        self.actionNewProject.setText(_translate("MainWindow", "Project"))
        self.actionNewDataset.setText(_translate("MainWindow", "Dataset"))
        self.actionNewTitrSim.setText(_translate("MainWindow", "Titration simulation"))
        self.actionNewSpeciesDist.setText(_translate("MainWindow", "Species distribution"))
        self.actionOptions.setText(_translate("MainWindow", "Options"))
        self.actionUndo.setText(_translate("MainWindow", "Undo"))
        self.actionRefresh.setText(_translate("MainWindow", "Refresh"))
        self.actionIteration.setText(_translate("MainWindow", "Iteration"))
        self.actionFit.setText(_translate("MainWindow", "Fit"))
        self.actionUse.setText(_translate("MainWindow", "Use"))
        self.actionUse.setToolTip(_translate("MainWindow", "Untick if you don\'t want this dataset to be included in the fitting."))
        self.actionNewEmfDS.setText(_translate("MainWindow", "Potentiometry"))
        self.actionNewSpecDS.setText(_translate("MainWindow", "Spectrometry"))
        self.actionNewNMRDS.setText(_translate("MainWindow", "NMR"))
        self.actionExportImage.setText(_translate("MainWindow", "Export image"))
        self.actionImportHypNMR.setText(_translate("MainWindow", "HypNMR"))
        self.actionNewModel.setText(_translate("MainWindow", "New"))
        self.actionRename.setText(_translate("MainWindow", "Rename"))
        self.actionAdd_beta.setText(_translate("MainWindow", "Add beta"))
        self.actionRemove_beta.setText(_translate("MainWindow", "Remove beta"))
        self.actionCopyTitDat.setText(_translate("MainWindow", "Copy titration data"))
        self.actionSaveOutput.setText(_translate("MainWindow", "Save"))
        self.actionOutputClear.setText(_translate("MainWindow", "Clear"))
        self.actionCoarse.setText(_translate("MainWindow", "Coarse"))
        self.actionFine.setText(_translate("MainWindow", "Fine"))
        self.actionAdd_reagent.setText(_translate("MainWindow", "Add reagent"))
        self.actionRemove_reagent.setText(_translate("MainWindow", "Remove reagent"))
        self.actionExport.setText(_translate("MainWindow", "Export"))
        self.actionHelp.setText(_translate("MainWindow", "Help"))
        self.actionAbout_APES.setText(_translate("MainWindow", "About APES"))
        self.actionProperties.setText(_translate("MainWindow", "Properties"))
        self.actionWAuto.setText(_translate("MainWindow", "Authomatic"))
        self.actionWUnit.setText(_translate("MainWindow", "Unity"))
        self.actionStyle1.setText(_translate("MainWindow", "Style 1"))
        self.actionStyle2.setText(_translate("MainWindow", "Style 2"))
        self.actionStyle3.setText(_translate("MainWindow", "Style 3"))
        self.actionStyle4.setText(_translate("MainWindow", "Style 4"))
        self.actionColorBW.setText(_translate("MainWindow", "B&&W"))
        self.actionColorRed.setText(_translate("MainWindow", "Red"))
        self.actionColorBlue.setText(_translate("MainWindow", "Blue"))
        self.actionColorRainbow.setText(_translate("MainWindow", "Rainbow"))
        self.actionFont6.setText(_translate("MainWindow", "6"))
        self.actionFont7.setText(_translate("MainWindow", "7"))
        self.actionFont8.setText(_translate("MainWindow", "8"))
        self.actionFont9.setText(_translate("MainWindow", "9"))
        self.actionFont10.setText(_translate("MainWindow", "10"))
        self.actionFont11.setText(_translate("MainWindow", "11"))
        self.actionFont12.setText(_translate("MainWindow", "12"))
        self.actionLabels.setText(_translate("MainWindow", "Labels"))
        self.actionLegend.setText(_translate("MainWindow", "Legend"))
        self.actionReset_counter.setText(_translate("MainWindow", "Reset χ² counter"))
        self.actionClear_external_data.setText(_translate("MainWindow", "Clear external data"))
        self.actionNewCalorimetryDS.setText(_translate("MainWindow", "Calorimetry"))
        self.actionClose.setText(_translate("MainWindow", "Close"))
        self.actionImportTxtSpec.setText(_translate("MainWindow", "Txt spectra"))
        self.actionImportK88.setText(_translate("MainWindow", "K88"))
        self.actionScale.setText(_translate("MainWindow", "Scale"))
        self.actionModelDelete.setText(_translate("MainWindow", "Delete"))
        self.actionDelete.setText(_translate("MainWindow", "Delete"))
        self.actionViewJacobian.setText(_translate("MainWindow", "View jacobian"))
        self.actionConcentrationSolver.setText(_translate("MainWindow", "Concentration solver"))
        self.actionModel_1.setText(_translate("MainWindow", "model #1"))
        self.actionImportModel.setText(_translate("MainWindow", "Import model"))
        self.actionNew.setText(_translate("MainWindow", "&New"))
        self.action_ar_calorimetry.setText(_translate("MainWindow", "Add/remove calorimetry"))
        self.actionRemove_calorimetry.setText(_translate("MainWindow", "Remove calorimetry"))
        self.actionNewExternalData.setText(_translate("MainWindow", "External Data"))
        self.action_set_temperature.setText(_translate("MainWindow", "Set temperature"))
        self.actionSaveConc.setText(_translate("MainWindow", "Save concentration"))
        self.actionColorGroup.setText(_translate("MainWindow", "By group"))
        self.actionAllowDP.setText(_translate("MainWindow", "Allow dangerous p."))
        self.action_combine_constants.setText(_translate("MainWindow", "Combine constants"))
        self.actionAspectRatio.setText(_translate("MainWindow", "Aspect ratio"))
        self.actionFigureSize.setText(_translate("MainWindow", "Size"))
        self.actionLabelFormat.setText(_translate("MainWindow", "Label format"))
        self.actionImportTiamo.setText(_translate("MainWindow", "Tiamo"))
        self.actionIonic_strength_calculator.setText(_translate("MainWindow", "Ionic strength calculator"))
        self.actionCompare_models.setText(_translate("MainWindow", "Compare models"))
        self.action_manual_fitting.setText(_translate("MainWindow", "Manual fitting"))
        self.actionImportExternal.setText(_translate("MainWindow", "External data"))
        self.actionCopyConc.setText(_translate("MainWindow", "Copy concentration"))
        self.actionAdd_solid.setText(_translate("MainWindow", "Add solid"))
        self.actionResetModel.setText(_translate("MainWindow", "Reset model"))
        self.actionNewTitration.setText(_translate("MainWindow", "Titration"))
